precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(URIs.__init__)})
precompile(Tuple{typeof(JuliaCLI.include), String})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{Expr, Symbol, Symbol}})
precompile(Tuple{typeof(Comonicon.codegen_ast_cast), Module, QuoteNode, Expr})
precompile(Tuple{Type{ExproniconLite.JLFunction}, Symbol, Symbol, Base.SubArray{Any, 1, Array{Any, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{Any, 1, Array{Any, 1}, Tuple{Base.UnitRange{Int64}}, true}, Nothing, Nothing, Expr, Nothing, Nothing})
precompile(Tuple{typeof(Base.:(==)), Bool, Bool})
precompile(Tuple{typeof(Base.getindex), Type{Comonicon.JLArgument}})
precompile(Tuple{typeof(Base.getindex), Type{Comonicon.JLOption}})
precompile(Tuple{Type{Comonicon.JLFlag}, Symbol})
precompile(Tuple{typeof(Base.getindex), Type{Comonicon.JLFlag}, Comonicon.JLFlag})
precompile(Tuple{Type{NamedTuple{(:color, :displaysize), T} where T<:Tuple}, Tuple{Bool, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:color, :displaysize), Tuple{Bool, Tuple{Int64, Int64}}}, Symbol})
precompile(Tuple{typeof(Base.first), Nothing})
precompile(Tuple{typeof(Base.replace), Nothing, Pair{Char, Char}})
precompile(Tuple{Comonicon.AST.var"##Description#1", String, String, Type{Comonicon.AST.Description}})
precompile(Tuple{Type{Comonicon.AST.Description}})
precompile(Tuple{Type{Comonicon.AST.Description}, Nothing})
precompile(Tuple{typeof(Comonicon.cast), Function, String, Array{Comonicon.JLArgument, 1}, Array{Comonicon.JLOption, 1}, Array{Comonicon.JLFlag, 1}, LineNumberNode})
precompile(Tuple{typeof(REPL.summarize), Base.GenericIOBuffer{Array{UInt8, 1}}, Function, Base.Docs.Binding})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.MethodList})
precompile(Tuple{typeof(Base.string_with_env), Base.ImmutableDict{Symbol, Any}, Type})
precompile(Tuple{Base.var"#sprint##kw", NamedTuple{(:context,), Tuple{Base.ImmutableDict{Symbol, Any}}}, typeof(Base.sprint), Function, Type, Vararg{Any}})
precompile(Tuple{Base.var"##sprint#452", Base.ImmutableDict{Symbol, Any}, Int64, typeof(Base.sprint), Function, Type, Vararg{Any}})
precompile(Tuple{typeof(Base.show_signature_function), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Any, Bool, String, Bool})
precompile(Tuple{typeof(Markdown.github_table), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
precompile(Tuple{typeof(Base.first), Array{Any, 1}})
precompile(Tuple{typeof(Base.:(==)), Array{Any, 1}, Array{Any, 1}})
precompile(Tuple{Type{Comonicon.AST.LeafCommand}, Function, String, Array{Comonicon.AST.Argument, 1}, Int64, Nothing, Base.Dict{String, Comonicon.AST.Flag}, Base.Dict{String, Comonicon.AST.Option}, Comonicon.AST.Description, LineNumberNode})
precompile(Tuple{typeof(Comonicon.set_cmd!), Base.Dict{String, Any}, Comonicon.AST.LeafCommand, String})
precompile(Tuple{Comonicon.var"#4#5"{ExproniconLite.JLFunction}, Expr})
precompile(Tuple{Type{NamedTuple{(:name, :type), T} where T<:Tuple}, Tuple{QuoteNode, Symbol}})
precompile(Tuple{ExproniconLite.var"#xcall##kw", NamedTuple{(:name, :type), Tuple{QuoteNode, Symbol}}, typeof(ExproniconLite.xcall), Module, Symbol})
precompile(Tuple{typeof(Comonicon.emit_default_hint), Expr})
precompile(Tuple{typeof(ExproniconLite.xcall), Expr, QuoteNode, Bool, Vararg{Any}})
precompile(Tuple{ExproniconLite.var"##xcall#54", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ExproniconLite.xcall), Expr, QuoteNode, Vararg{Any}})
precompile(Tuple{Type{NamedTuple{(:name, :type), T} where T<:Tuple}, Tuple{Symbol, DataType}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:name, :type), Tuple{Symbol, DataType}}, Type{Comonicon.JLArgument}})
precompile(Tuple{Type{NamedTuple{(:name, :require, :vararg), T} where T<:Tuple}, Tuple{Symbol, Bool, Bool}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:name, :require, :vararg), Tuple{Symbol, Bool, Bool}}, Type{Comonicon.JLArgument}})
precompile(Tuple{typeof(Base.getindex), Type{Comonicon.JLArgument}, Comonicon.JLArgument, Comonicon.JLArgument})
precompile(Tuple{Type{Comonicon.JLOption}, Symbol, Bool, Type, String})
precompile(Tuple{typeof(Base.getindex), Type{Comonicon.JLOption}, Comonicon.JLOption})
precompile(Tuple{Type{Comonicon.AST.Argument}, String, Type, Bool, Bool, Nothing, Comonicon.AST.Description, LineNumberNode})
precompile(Tuple{Type{NamedTuple{(:sym, :name, :hint, :require, :type, :line), T} where T<:Tuple}, Tuple{Symbol, String, String, Bool, DataType, LineNumberNode}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:sym, :name, :hint, :require, :type, :line), Tuple{Symbol, String, String, Bool, DataType, LineNumberNode}}, Type{Comonicon.AST.Option}})
precompile(Tuple{Type{Comonicon.AST.LeafCommand}, Function, String, Array{Comonicon.AST.Argument, 1}, Int64, Comonicon.AST.Argument, Base.Dict{String, Comonicon.AST.Flag}, Base.Dict{String, Comonicon.AST.Option}, Comonicon.AST.Description, LineNumberNode})
precompile(Tuple{Type{NamedTuple{(:name, :require, :default), T} where T<:Tuple}, Tuple{QuoteNode, Bool, String}})
precompile(Tuple{ExproniconLite.var"#xcall##kw", NamedTuple{(:name, :require, :default), Tuple{QuoteNode, Bool, String}}, typeof(ExproniconLite.xcall), Module, Symbol})
precompile(Tuple{Type{NamedTuple{(:name, :require, :default), T} where T<:Tuple}, Tuple{Symbol, Bool, String}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:name, :require, :default), Tuple{Symbol, Bool, String}}, Type{Comonicon.JLArgument}})
precompile(Tuple{typeof(Base.getindex), Type{Comonicon.JLArgument}, Comonicon.JLArgument})
precompile(Tuple{Type{Comonicon.AST.Argument}, String, Type, Bool, Bool, String, Comonicon.AST.Description, LineNumberNode})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Configurations.var"#5#6"{Comonicon.Configs.Comonicon}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Configurations.var"#5#6"{Comonicon.Configs.Comonicon}}, Base.HasShape{1}})
precompile(Tuple{Comonicon.Configs.var"##s23#21", Any, Any, Any, Any})
precompile(Tuple{Comonicon.Configs.var"##Command#16", Bool, Bool, Int64, Bool, Bool, Type{Comonicon.Configs.Command}})
precompile(Tuple{Comonicon.Configs.var"##Install#1", String, Bool, Bool, String, Int64, Int64, Type{Comonicon.Configs.Install}})
precompile(Tuple{Type{Comonicon.Configs.Install}, String, Bool, Bool, String, Int64, Int64})
precompile(Tuple{Type{Comonicon.Configs.Install}})
precompile(Tuple{typeof(Configurations.get_type_alias_map), Type{Comonicon.Configs.Comonicon}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type{Comonicon.Configs.Comonicon}, Symbol})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:name}, Type, Symbol})
precompile(Tuple{Type{Pair{A, B} where B where A}, Expr, Expr})
precompile(Tuple{typeof(ExproniconLite.codegen_ast), Expr})
precompile(Tuple{Type{Configurations.OptionField{:command}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:command}, Type, Symbol})
precompile(Tuple{typeof(Configurations.is_option), Type{Comonicon.Configs.Command}})
precompile(Tuple{Type{Configurations.OptionField{:install}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:install}, Type, Symbol})
precompile(Tuple{typeof(Configurations.is_option), Type{Comonicon.Configs.Install}})
precompile(Tuple{Type{Configurations.OptionField{:sysimg}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:sysimg}, Type, Symbol})
precompile(Tuple{typeof(Configurations.is_option), Type{Comonicon.Configs.SysImg}})
precompile(Tuple{Type{Configurations.OptionField{:download}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:download}, Type, Symbol})
precompile(Tuple{typeof(Configurations.is_option), Type{Comonicon.Configs.Download}})
precompile(Tuple{Type{Configurations.OptionField{:application}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:application}, Type, Symbol})
precompile(Tuple{typeof(Configurations.is_option), Type{Comonicon.Configs.Application}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Configurations.var"#5#6"{Comonicon.Configs.Command}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Configurations.var"#5#6"{Comonicon.Configs.Command}}, Base.HasShape{1}})
precompile(Tuple{typeof(Configurations.underscore), Nothing, Symbol})
precompile(Tuple{Comonicon.Configs.var"##s23#18", Any, Any, Any, Any})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type{Comonicon.Configs.Command}, Symbol})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:color}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:static}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:static}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:width}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:width}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:dash}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:dash}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:plugin}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:plugin}, Type, Symbol})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Configurations.var"#5#6"{Comonicon.Configs.Install}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Configurations.var"#5#6"{Comonicon.Configs.Install}}, Base.HasShape{1}})
precompile(Tuple{Type{Base.CanonicalIndexError}, String, Any})
precompile(Tuple{Comonicon.Configs.var"##s9#3", Any, Any, Any, Any})
precompile(Tuple{typeof(Configurations.get_type_alias_map), Type{Comonicon.Configs.Install}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type{Comonicon.Configs.Install}, Symbol})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:path}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:completion}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:completion}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:quiet}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:quiet}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:compile}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:compile}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:optimize}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:optimize}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:nthreads}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:nthreads}, Type, Symbol})
precompile(Tuple{typeof(Configurations.find_reflect_field), Type{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Configurations.var"#5#6"{Comonicon.Configs.SysImg}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Configurations.var"#5#6"{Comonicon.Configs.SysImg}}, Base.HasShape{1}})
precompile(Tuple{Comonicon.Configs.var"##s17#9", Any, Any, Any, Any})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type{Comonicon.Configs.SysImg}, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:incremental}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:incremental}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:filter_stdlibs}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:filter_stdlibs}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:cpu_target}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:cpu_target}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:precompile}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:precompile}, Type, Symbol})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Configurations.var"#5#6"{Comonicon.Configs.Precompile}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Configurations.var"#5#6"{Comonicon.Configs.Precompile}}, Base.HasShape{1}})
precompile(Tuple{Comonicon.Configs.var"##s17#6", Any, Any, Any, Any})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type{Comonicon.Configs.Precompile}, Symbol})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:execution_file}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:statements_file}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:statements_file}, Type, Symbol})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Configurations.var"#5#6"{Comonicon.Configs.Download}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Configurations.var"#5#6"{Comonicon.Configs.Download}}, Base.HasShape{1}})
precompile(Tuple{Comonicon.Configs.var"##s17#12", Any, Any, Any, Any})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type{Comonicon.Configs.Download}, Symbol})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:host}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:user}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:user}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:repo}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:repo}, Type, Symbol})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Configurations.var"#5#6"{Comonicon.Configs.Application}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Configurations.var"#5#6"{Comonicon.Configs.Application}}, Base.HasShape{1}})
precompile(Tuple{Comonicon.Configs.var"##s17#15", Any, Any, Any, Any})
precompile(Tuple{typeof(Base.:(-)), Int32})
precompile(Tuple{typeof(Base.keys), Base.Dict{String, Array{UInt8, 1}}})
precompile(Tuple{typeof(Configurations.get_type_alias_map), Type{Comonicon.Configs.Application}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type{Comonicon.Configs.Application}, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:assets}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:assets}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:include_lazy_artifacts}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:include_lazy_artifacts}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:c_driver_program}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:c_driver_program}, Type, Symbol})
precompile(Tuple{Type{Configurations.OptionField{:shell_completions}}})
precompile(Tuple{typeof(Configurations.from_dict_generated), Type, Configurations.OptionField{:shell_completions}, Type, Symbol})
precompile(Tuple{typeof(Comonicon.codegen_entry), Module, QuoteNode})
precompile(Tuple{Type{Configurations.FieldTypeConversionError}, Type, Symbol, Type, Type})
precompile(Tuple{typeof(Configurations.from_dict), Type{Comonicon.Configs.Comonicon}, Configurations.OptionField{:name}, Type{String}, String})
precompile(Tuple{Type{Comonicon.Configs.Comonicon}, String, Comonicon.Configs.Command, Comonicon.Configs.Install, Nothing, Nothing, Nothing})
precompile(Tuple{typeof(Comonicon.codegen_entry_cmd), Module, QuoteNode, Symbol, Comonicon.Configs.Comonicon, Nothing})
precompile(Tuple{typeof(Base.Docs.aliasof), Any, Any})
precompile(Tuple{typeof(REPL.summarize), Base.GenericIOBuffer{Array{UInt8, 1}}, Any, Base.Docs.Binding})
precompile(Tuple{typeof(Base.copy), Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.convert), Type{Comonicon.AST.Description}, Nothing})
precompile(Tuple{Type{Comonicon.AST.NodeCommand}, String, Base.Dict{String, Any}, Nothing, LineNumberNode})
precompile(Tuple{Type{Comonicon.AST.Entry}, Comonicon.AST.NodeCommand, Nothing, LineNumberNode})
precompile(Tuple{typeof(Comonicon.set_cmd!), Base.Dict{String, Any}, Comonicon.AST.Entry, String})
precompile(Tuple{typeof(Comonicon.JuliaExpr.emit), Comonicon.AST.Entry, Comonicon.JuliaExpr.Configs})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.KeySet{String, Base.Dict{String, Any}}, String})
precompile(Tuple{typeof(Comonicon.AST.print_cmd), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Comonicon.AST.Entry})
precompile(Tuple{Type{NamedTuple{(:width,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:width,), Tuple{Int64}}, Type{Comonicon.AST.Terminal}})
precompile(Tuple{typeof(Comonicon.AST.print_name_brief), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Comonicon.AST.LeafCommand, Comonicon.AST.Terminal})
precompile(Tuple{typeof(Comonicon.AST.print_cmd), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Comonicon.AST.LeafCommand})
precompile(Tuple{typeof(Comonicon.AST.ignore_type), Type})
precompile(Tuple{typeof(Comonicon.JuliaExpr.emit_parse_value), Comonicon.AST.LeafCommand, Comonicon.JuliaExpr.EmitContext, Type, Expr})
precompile(Tuple{ExproniconLite.var"#9#10"{Expr}, Expr})
precompile(Tuple{typeof(Base.isequal), Int64, Int64})
precompile(Tuple{typeof(Comonicon.AST.print_cmd), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Comonicon.AST.Option})
precompile(Tuple{typeof(Comonicon.JuliaExpr.emit_parse_value), Comonicon.AST.Option, Comonicon.JuliaExpr.EmitContext, Type, Symbol})
precompile(Tuple{typeof(Base.isequal), Expr, Expr})
precompile(Tuple{typeof(JuliaCLI.eval), Expr})
precompile(Tuple{typeof(Base.isequal), String})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:symbolcache_upstream,), Tuple{Nothing}}, Symbol})
precompile(Tuple{typeof(Base.keys), Base.Dict{Symbol, SymbolServer.ModuleStore}})
precompile(Tuple{Type{StaticLint.LintOptions}, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(Base.convert), Type{StaticLint.LintOptions}, StaticLint.LintOptions})
precompile(Tuple{Type{LanguageServer.WorkDoneProgressBegin}, String, Base.Missing, String, Base.Missing})
precompile(Tuple{Type{NamedTuple{(:by, :rev), T} where T<:Tuple}, Tuple{typeof(Base.length), Bool}})
precompile(Tuple{Type{Base.Order.By{typeof(Base.length), Base.Order.ForwardOrdering}}, Function, Base.Order.ForwardOrdering})
precompile(Tuple{Type{Base.Order.By{typeof(Base.length), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}}, Function, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:by, :rev), Tuple{typeof(Base.length), Bool}}})
precompile(Tuple{typeof(Base.setproperty!), Nothing, Symbol, Nothing})
precompile(Tuple{typeof(CSTParser.setparent!), Nothing, Nothing})
precompile(Tuple{typeof(Base.last), Nothing})
precompile(Tuple{typeof(StaticLint.retrieve_scope), Nothing})
precompile(Tuple{typeof(CSTParser.defines_module), Nothing})
precompile(Tuple{typeof(Base.rem), UInt8, Type{Int64}})
precompile(Tuple{typeof(CSTParser.is_getfield_w_quotenode), Nothing})
precompile(Tuple{Type{SymbolServer.VarRef}, Nothing, Symbol})
precompile(Tuple{typeof(CSTParser.defines_struct), Nothing})
precompile(Tuple{typeof(CSTParser.defines_datatype), Nothing})
precompile(Tuple{typeof(StaticLint.is_in_funcdef), Nothing})
precompile(Tuple{Type{SymbolServer.VarRef}, SymbolServer.VarRef, Symbol})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Array{Any, 1}, 1}}})
precompile(Tuple{typeof(Base.:(<)), UInt32, UInt32})
precompile(Tuple{typeof(Base.:(>)), UInt32, UInt32})
precompile(Tuple{Type{NamedTuple{(:allow_const_field,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Type{NamedTuple{(:insert_params_at,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{typeof(CSTParser.get_prec), Nothing})
precompile(Tuple{typeof(CSTParser.LtoR), Int64})
precompile(Tuple{typeof(Base.:(-)), Int64, Bool})
precompile(Tuple{typeof(Base.:(!=)), UInt32, UInt32})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Nothing}})
precompile(Tuple{typeof(Base.pairs), Nothing})
precompile(Tuple{typeof(Base.findfirst), StaticLint.var"#7#8", Nothing})
precompile(Tuple{Type{Base.Generator{Nothing, StaticLint.var"#24#25"}}, Function, Nothing})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Nothing, StaticLint.var"#24#25"}})
precompile(Tuple{Base.var"##count#288", Int64, typeof(Base.count), Function, Nothing})
precompile(Tuple{typeof(Base._simple_count_helper), Base.Generator{Nothing, StaticLint.var"#24#25"}, Int64})
precompile(Tuple{typeof(Base.count), Function, Nothing})
precompile(Tuple{typeof(JuliaCLI.command_main), Array{String, 1}})
